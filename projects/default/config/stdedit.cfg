///////////////////////////////////////////////////////////////////////////////
//  nodeity primary actions                                                   //
///////////////////////////////////////////////////////////////////////////////

=nodetype = [|| (=s * $arg1) [=s (nodetype) $arg1]]

=nodeattr = [|| (=s * $arg2) [= (nodeattr $arg1) $arg2]]

// clear nodes of given type
clearnodes = [ 
   if $editing [
      nodecancel
      nodeselect [=nodetype $arg1]
      echo Deleted (nodehavesel) $arg1 nodeities
      delnode
   ] 
]

// replace all nodes that match currnode selection
// with the values given
replacenodes = [
   if $editing [
      do [
         nodefind @(nodeget)
         nodeset @(loopconcat+ i 1 $numargs [result $[arg@i]])
      ]
      echo Replaced (nodehavesel) nodeities
   ]
]

selnodeedit     = [saycommand (concatword "/nodeset " (nodeget))]
selreplacenodes = [saycommand (concatword "/replacenodes " (nodeget))]
selnodefindall  = [do [nodefind @(nodeget)]]

// modify given attribute of node by a given amount
// arg1 attribute
// arg2 value
nodeproperty = [nodeattr $arg1 (+ (nodeattr $arg1) $arg2)]

nodetypelist = [ 
   light mapmodel playerstart envmap particles sound spotlight decal
   teleport teledest jumppad
   flag
]

nodetypeselect = [     
   nodetypelength = (listlen $nodetypelist)
   next = (mod (+ (indexof $nodetypelist (nodetype)) $arg1) $nodetypelength)
   if (< $next 0) [ next = (+ $next $nodetypelength) ]
   do [nodeset @(listsplice (nodeget) (at $nodetypelist $next) 0 1)]
]


///////////////////////////////////////////////////////////////////////////////
//  Copy & Paste                                                             //
///////////////////////////////////////////////////////////////////////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and nodes  -> paste cubes and nodes. same relative positions
// 3. select only nodes       -> paste last selected node. if nodes are selected, replace attrs as paste

opaquepaste = 1
nodecopymode = 0

editcopy   = [
   if (|| (havesel) [! (nodehavesel)]) [
      nodecopymode = 0
      nodecopy
      copy
   ] [
      nodecopymode = 1
      nodecopy
   ]
]

editpaste  = [ 
   cancelpaste = (! (|| (nodehavesel) [havesel]));
   if $nodecopymode [
      nodereplace
      if $cancelpaste [cancelsel]
   ] [
      pastehilite
      reorinode // temp; real fix will be in octaedit
      onrelease [ 
         if $opaquepaste delcube 
         paste; nodepaste
         if $cancelpaste [cancelsel] 
      ] 
   ]
]


///////////////////////////////////////////////////////////////////////////////
//  Selection                                                                //
///////////////////////////////////////////////////////////////////////////////

// select nodes with given properties
// '*' is wildcard
nodefind = [
   if $numargs [
      nodeselect (concat [&& [=nodetype @@arg1]] (loopconcat i (- $numargs 1) [
         result [[=nodeattr @@i @@[arg@(+ $i 2)]]]
      ]))
   ] [nodeselect 1]
]

nodefindinsel = [
   if $numargs [
      nodeselect (concat [&& insel [=nodetype @@arg1]] (loopconcat i (- $numargs 1) [
         result [[=nodeattr @@i @@[arg@(+ $i 2)]]]
      ]))
   ] [nodeselect insel]
]

drag       = [dragging 1; onrelease [dragging 0]]
corners    = [selectcorners 1; dragging 1; onrelease [selectcorners 0; dragging 0]]
editmove   = [moving 1; onrelease [moving 0]; result $moving]
nodedrag    = [nodemoving 1; onrelease [nodemoving 0]; result $nodemoving] 
editdrag   = [cancelsel; || (nodedrag) [drag]]
selcorners = [if $hmapedit [hmapselect] [cancelsel; || (nodedrag) [corners]]]
editextend = [|| (nodedrag) [if (havesel) [selextend; reorinode; editmovecut] [drag]]]

editmovewith = [
   if (havesel) [
      || (editmove) [arg1]
      onrelease [moving 0; dragging 0]
   ] [
      arg1
   ]
]

editmovecorner = [editmovewith selcorners]
editmovedrag   = [editmovewith editdrag]


///////////////////////////////////////////////////////////////////////////////
//  Miscellaneous Editing Commands                                           //
///////////////////////////////////////////////////////////////////////////////

editfacewsel = [
   if (|| havesel [! (nodehavesel)]) [
      if $moving [pushsel $arg1] [
         nodecancel
         editface $arg1 $arg2
      ]
   ]
]

nodeswithdirection = [playerstart teledest mapmodel decal]
nodedirectionprop  = [0           0        1        1    ]

nodedirection = [
   if (&& (nodehavesel) [= (havesel) 0]) [
      nodediridx = (indexof $nodeswithdirection (nodetype))
      if (>= $nodediridx 0) [
         nodedirprop = (at $nodedirectionprop $nodediridx)
         if (> $arg1 0) [
            nodeproperty $nodedirprop $arg2
            if (> (nodeattr $nodedirprop) 360) [nodeproperty $nodedirprop -360]          
         ] [
            nodeproperty $nodedirprop (- 0 $arg2)
            if (< (nodeattr $nodedirprop) 0) [nodeproperty $nodedirprop 360]
         ]
      ]
      result 1
   ] [
      result 0
   ]
]

selmovecut = 1
toggleeditmovecut = [
   selmovecut = (! $selmovecut)
   echo (? $selmovecut "Move Selection" "Cut Selection")
]
editmovecut = [
   if $selmovecut [editmove] [editcut]
]

editdel    = [if (! (nodehavesel)) [delcube]; delnode]
editflip   = [flip; nodeflip]
editrotate = [|| (nodedirection $arg1 15) [rotate $arg1; noderotate $arg1]]
editcut    = [  
   if (moving 1) [
      if (= $moving 1) [selsave]
      onrelease [ 
         moving 0
         if (selmoved) [
            selswap
            copy; nodecopy
            delcube; delnode
            selrestore
            paste; nodepaste
         ]
      ]
   ]
]

setting_nodeediting = 1

passthrough = [ 
   passthroughsel $arg1; 
   if $arg1 [
      passthroughcube_bak = $passthroughcube
      passthroughcube 1
   ] [
      passthroughcube $passthroughcube_bak
   ]
   nodecancel 
   if $setting_nodeediting [nodeediting (! $arg1)]
]

nodecomplete = [listcomplete $arg1 $nodetypelist]
nodecomplete newnode
nodecomplete nodefind
nodecomplete clearnodes

listcomplete editmat "air water clip glass noclip lava gameclip death nogi alpha"
air = [ editmat air $arg1 ]
looplist i ["" 2 3 4] [
   [water@i] = [editmat water@i $arg1]
   [lava@i]  = [editmat lava@i $arg1]
   [glass@i] = [editmat glass@i $arg1]
]
clip     = [editmat clip $arg1]
noclip   = [editmat noclip $arg1]
gameclip = [editmat gameclip $arg1]
death    = [editmat death $arg1]
nogi     = [editmat nogi $arg1]
alpha    = [editmat alpha $arg1]

blendpaintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]

minimaphere = [minimapheight (at (getcampos) 2)]

getsundir = [sunlightyaw (getcamyaw); sunlightpitch (getcampitch)]

defvarp editfloatspeed 1 1000 10000

makeitsnow = [newnode particles 13 364 70 0xAAA 550] // derp
